// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwitchGames.Ttny.Dal.Entities;

namespace TwitchGames.Ttny.Dal.Migrations
{
    [DbContext(typeof(TtnyDbContext))]
    [Migration("20210623202712_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownEntity.Town", b =>
                {
                    b.Property<Guid>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Food")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("NextAttackSize")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Wood")
                        .HasColumnType("INTEGER");

                    b.HasKey("TownId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownEventEntity.TownEvent", b =>
                {
                    b.Property<Guid>("TownEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TownId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("TownEventId");

                    b.HasIndex("TownId");

                    b.HasIndex("UserId");

                    b.ToTable("TownEvents");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownUserEntity.TownUser", b =>
                {
                    b.Property<Guid>("TownId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HaveAction")
                        .HasColumnType("INTEGER");

                    b.HasKey("TownId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("TownUsers");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.UserEntity.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownEventEntity.TownEvent", b =>
                {
                    b.HasOne("TwitchGames.Ttny.Dal.Entities.TownEntity.Town", "Town")
                        .WithMany("TownEvents")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwitchGames.Ttny.Dal.Entities.UserEntity.User", "User")
                        .WithMany("TownEvents")
                        .HasForeignKey("UserId");

                    b.Navigation("Town");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownUserEntity.TownUser", b =>
                {
                    b.HasOne("TwitchGames.Ttny.Dal.Entities.TownEntity.Town", "Town")
                        .WithMany("TownUsers")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwitchGames.Ttny.Dal.Entities.UserEntity.User", "User")
                        .WithMany("TownUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.TownEntity.Town", b =>
                {
                    b.Navigation("TownEvents");

                    b.Navigation("TownUsers");
                });

            modelBuilder.Entity("TwitchGames.Ttny.Dal.Entities.UserEntity.User", b =>
                {
                    b.Navigation("TownEvents");

                    b.Navigation("TownUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
